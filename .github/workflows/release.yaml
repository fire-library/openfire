name: "publish"

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    environment: Release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: "macos-latest" # for Arm based macs (M1 and above).
          #   target: "aarch64-apple-darwin"
          #   s3-directory: "aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            target: "x86_64-apple-darwin"
            s3-directory: "x86_64-apple-darwin"
          # - platform: "ubuntu-22.04"
          #   target: "x86_64-unknown-linux-gnu"
          #   s3-directory: "ubuntu"
          # - platform: "windows-latest"
          #   target: "x86_64-pc-windows-msvc"
          #   s3-directory: "windows"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: dist/
          key: ${{ github.sha }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.target }}

      - name: Build
        id: build
        # create the release and set the output folder for the next step
        run: |
          cargo build --release --target ${{ matrix.target }}
          mkdir -p dist
          cp target/${{ matrix.target }}/release/openfire dist/
          echo appVersion=0.0.1

  codesign-for-macos:
    runs-on: macos-latest
    needs: [publish-tauri]
    steps:
      - uses: actions/cache@v3
        with:
          path: dist/
          key: ${{ github.sha }}

      - name: import signing certificate
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: sign executable
        run: /usr/bin/codesign --force -s ${{ secrets.APPLE_SIGNING_IDENTITY }} -o runtime ./dist/openfire -v

  release:
    needs: [publish-tauri, codesign-for-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: dist/
          key: ${{ github.sha }}

      - name: Create a release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}
          release_name: "OpenFire v${{ steps.build.outputs.appVersion }}"
          body: "See the assets to download this version and install."
          draft: true
          prerelease: false
